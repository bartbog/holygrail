// Problem p5

vocabulary V {
    type year = {109; 110; 111; 112; 113} isa int
    type person constructed from {the_other_person, mattie, ernesto, roxanne, zachary}
    type type1 constructed from {the_other_type1, oregon, kansas, washington, alaska}
    type type2 constructed from {the_other_type2, tehama, zearing, plymouth, shaver_lake}

    is_old(person, year)
    a_native_of(person, type1)
    lives_in(person, type2)
    from(person, type1)
}

structure S : V {
}

theory T : V {
    // Mattie is 113 years old
    is_old(mattie,113).

    // The person who lives in Tehama is a native of either Kansas or Oregon
    ?a [person]: lives_in(a,tehama) & (a_native_of(a,kansas) | a_native_of(a,oregon)).

    // The Washington native is 1 year older than Ernesto
    ?b [person] c [year] d [year]: is_old(ernesto,c) & d = c+1 & is_old(b,d) & a_native_of(b,washington).

    // Roxanne is 2 years younger than the Kansas native
    ?e [year] f [person] g [year]: is_old(f,e) & a_native_of(f,kansas) & g = e-2 & is_old(roxanne,g).

    // The person who lives in Zearing isn't a native of Alaska
    ?h [person]: lives_in(h,zearing) & ~ a_native_of(h,alaska).

    // The person who is 111 years old doesn't live in Plymouth
    ?i [person]: is_old(i,111) & ~ lives_in(i,plymouth).

    // The Oregon native is either Zachary or the person who lives in Tehama
    ?j [person]: (zachary = j | (?k [person]: lives_in(k,tehama) & k = j)) & a_native_of(j,oregon).

    // The person who lives in Shaver Lake is 1 year younger than Roxanne
    ?l [person] m [year] n [year]: lives_in(l,shaver_lake) & is_old(roxanne,m) & n = m-1 & is_old(l,n).

    // The centenarian who lives in Plymouth isn't a native of Alaska
    ?o [person]: lives_in(o,plymouth) & ~ a_native_of(o,alaska).

    // Of the person who lives in Tehama and Mattie, one is a native of Alaska and the other is from Kansas
    ?p [person]: lives_in(p,tehama) & ~ (p = mattie) & (a_native_of(p,alaska) & from(mattie,kansas) | a_native_of(mattie,alaska) & from(p,kansas)).


    // Logigram bijection axioms:
    ! x [person]: ?=1 y [year]: is_old(x, y).
    ! x [year]: ?=1 y [person]: is_old(y, x).

    ! x [person]: ?=1 y [type1]: a_native_of(x, y).
    ! x [type1]: ?=1 y [person]: a_native_of(y, x).

    ! x [person]: ?=1 y [type2]: lives_in(x, y).
    ! x [type2]: ?=1 y [person]: lives_in(y, x).

    ! x [person]: ?=1 y [type1]: from(x, y).
    ! x [type1]: ?=1 y [person]: from(y, x).

    // Logigram synonym axioms:
    ! x [person] y [type1]: a_native_of(x, y) <=> from(x, y).
}

procedure main() {
    stdoptions.nbmodels = 10;
    printmodels(modelexpand(T,S))
    model = modelexpand(T,S)
}

