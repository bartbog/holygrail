// Zebra Puzzle (https://en.wikipedia.org/wiki/Zebra_Puzzle)
// There are five houses.
// The Englishman lives in the red house.
// The Spaniard owns the dog.
// Coffee is drunk in the green house.
// The Ukrainian drinks tea.
// The green house is immediately to the right of the ivory house.
// The Old Gold smoker owns snails.
// Kools are smoked in the yellow house.
// Milk is drunk in the middle house.
// The Norwegian lives in the first house.
// The man who smokes Chesterfields lives in the house next to the man with the fox.
// Kools are smoked in the house next to the house where the horse is kept.
// The Lucky Strike smoker drinks orange juice.
// The Japanese smokes Parliaments.
// The Norwegian lives next to the blue house.
// Now, who drinks water? Who owns the zebra?

// In the interest of clarity, it must be added that each of the five houses is painted a different color, and their inhabitants are of different national extractions, own different pets, drink different beverages and smoke different brands of American cigarets [sic]. One other thing: in statement 6, right means your right.

vocabulary V {
    // There are exactly 5 ...: ...
    type Person constructed from {Englishman, Spaniard, Ukrainian, Japanese, Norwegian}
    type Color constructed from {Red, Green, Ivory, Yellow, Blue}
    type Animal constructed from {Dog, Zebra, Snail, Fox, Horse}
    type Drink constructed from {Coffee, Tea, Milk, OrangeJuice, Water}
    type Cigarette constructed from {Chesterfields, OldGold, LuckyStrike, Kools, Parliaments}

    // There are exaclty 5 houses identified by its position.
    // identified implies nat
    type House = {1; 2; 3; 4; 5} isa nat
    position(House): House

    // A person keeps an animal, drinks a drink, smokes a cigarette.
    keeps(Person): Animal
    drinks(Person): Drink
    smokes(Person): Cigarette

    // A person lives in a house
    lives_in(Person): House

    // A house has a color
    colored(House): Color

    // A house can be next to multiple other houses.
    // other => not to itself
    next(House, House)
}

structure S : V {
}

theory T : V {
    // from voc:
    // "identified by"
    ! x y: position(x) = y => x = y.
    ! x: position(x) = x.
    // "other"
    ! x y: next(x, y) => x ~= y.

    // The Englishman lives in the red house.
    //lives_in(Englishman, Red).
    ? x: lives_in(Englishman) = x & colored(x) = Red.

    // The Spaniard owns the dog.Color
    // The Spaniard keeps the dog.
    keeps(Spaniard) = Dog.

    // Coffee is drunk in the green house.
    // There is a person who lives in the green house and drinks coffee.
    ? x y: lives_in(x) = y & colored(y) = Green & drinks(x) = Coffee.

    // The Ukrainian drinks tea.
    drinks(Ukrainian) = Tea.

    // The green house is immediately to the right of the ivory house.
    // The position of the green house is equal to the position of the ivory house plus 1
    ? x y: colored(x) = Green & colored(y) = Ivory & position(x) = position(y) + 1.

    // The Old Gold smoker owns snails.
    // There is a person who smokes Old Gold and keeps the snail.
    ? x: smokes(x) = OldGold & keeps(x) = Snail.

    // Kools are smoked in the yellow house.
    // There is a person who lives in a yellow house and smokes Kools
    ? x y: lives_in(x) = y & colored(y) = Yellow & smokes(x) = Kools.

    // Milk is drunk in the middle house.
    // The person who lives in the third house, drinks milk.
    ?=1 x: ?=1 y: lives_in(x) = y & position(y) = 3 & drinks(x) = Milk.

    // The Norwegian lives in the first house.
    // The Norwegian lives in the first house
    ? x: lives_in(Norwegian) = x & position(x) = 1.

    // A house A is next to a house B if the absolute value of the difference between the position of house A and house B is 1.
    {! a b: next(a, b) <- abs(position(a)-position(b)) = 1.}

    // The man who smokes Chesterfields lives in the house next to the man with the fox.
    // The house in which the person who smokes Chesterfields lives, is next to the house in which the person who keeps the fox lives.
    ? a b s t: lives_in(a) = b & smokes(a) = Chesterfields & lives_in(s) = t & keeps(s) = Fox & next(b, t).

    // Kools are smoked in the house next to the house where the horse is kept
    // The house in which the person who smokes Kools lives, is next to the house in which the person who keeps a horse lives.
    ? a b s t: lives_in(a) = b & smokes(a) = Kools & lives_in(s) = t & keeps(s) = Horse & next(b, t).

    // The Lucky Strike smoker drinks orange juice.
    // The person who drinks LuckyStrike, drinks OrangeJuice
    ?=1 x: smokes(x) = LuckyStrike & drinks(x) = OrangeJuice.

    // The Japanese smokes Parliaments.
    smokes(Japanese) = Parliaments.

    // The Norwegian lives next to the blue house.
    // The Norwegian lives in a house next to the blue house.
    ? x y: lives_in(Norwegian) = x & next(x, y) & colored(y) = Blue.

    // Now, who drinks water? Who owns the zebra?

    // In the interest of clarity, it must be added that each of the five houses is painted a different color, and their inhabitants are of different national extractions, own different pets, drink different beverages and smoke different brands of American cigarets [sic]. One other thing: in statement 6, right means your right
    // Every animal is kept by exactly one Person.
    !x: ?=1 y: keeps(y) = x.
    //...
    !x: ?=1 y: drinks(y) = x.
    !x: ?=1 y: smokes(y) = x.
    !x: ?=1 y: lives_in(y) = x.
    !x: ?=1 y: colored(y) = x.
}

query DrinksWater : V {
    {p: drinks(p) = Water}
}

query KeepsZebra : V {
    {p: keeps(p) = Zebra}
}

procedure main() {
    stdoptions.nbmodels = 2;
	printmodels(modelexpand(T,S))
    model = modelexpand(T,S)
    print(query(DrinksWater, model[1]))
    print(query(KeepsZebra, model[1]))
    print('Correct solution: Norwegian & Japanese')
}
