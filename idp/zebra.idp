// Zebra Puzzle (https://en.wikipedia.org/wiki/Zebra_Puzzle)
// There are five houses.
// The Englishman lives in the red house.
// The Spaniard owns the dog.
// Coffee is drunk in the green house.
// The Ukrainian drinks tea.
// The green house is immediately to the right of the ivory house.
// The Old Gold smoker owns snails.
// Kools are smoked in the yellow house.
// Milk is drunk in the middle house.
// The Norwegian lives in the first house.
// The man who smokes Chesterfields lives in the house next to the man with the fox.
// Kools are smoked in the house next to the house where the horse is kept.
// The Lucky Strike smoker drinks orange juice.
// The Japanese smokes Parliaments.
// The Norwegian lives next to the blue house.
// Now, who drinks water? Who owns the zebra?

// In the interest of clarity, it must be added that each of the five houses is painted a different color, and their inhabitants are of different national extractions, own different pets, drink different beverages and smoke different brands of American cigarets [sic]. One other thing: in statement 6, right means your right.

vocabulary V {    
    // There are exactly 5 ...: ...
    type Person constructed from {Englishman, Spaniard, Ukrainian, Japanese, Norwegian}
    type Color constructed from {Red, Green, Ivory, Yellow, Blue}
    type Animal constructed from {Dog, Zebra, Snail, Fox, Horse}
    type Drink constructed from {Coffee, Tea, Milk, OrangeJuice, Water}
    type Cigarette constructed from {Chesterfields, OldGold, LuckyStrike, Kools, Parliaments}
    
    // ???
    type House constructed from {House1, House2, House3, House4, House5}
        
    // ???
    type Position = {1; 2; 3; 4; 5} isa nat
   
    //lives(Person, Color)
    keeps(Person, Animal)
    drinks(Person, Drink)
    smokes(Person, Cigarette)
    //placed(Color, Position)
    
    lives(Person, House)
    colored(House, Color)
    placed(House, Position)
    next(House, House)
}

structure S : V {
}

theory T : V {
    // There are five houses.
    
    // The Englishman lives in the red house.
    //lives(Englishman, Red).
    ? x: lives(Englishman, x) & colored(x, Red).
    
    // The Spaniard owns the dog.Color
    // The Spaniard keeps the dog.
    keeps(Spaniard, Dog).
    
    // Coffee is drunk in the green house.
    // There is a person who lives in the green house and drinks coffee.
    ? x y: lives(x, y) & colored(y, Green) & drinks(x, Coffee).
    
    // The Ukrainian drinks tea.
    drinks(Ukrainian, Tea).
    
    // The green house is immediately to the right of the ivory house.
    // The green house is placed at the position of the ivory house plus 1
    ? x y a b: colored(x, Green) & colored(y, Ivory) & placed(x, a) & placed(y, b) & a = b + 1.
    
    // The Old Gold smoker owns snails.
    // Every person who smokes Old Gold, keeps the snail.
    ! x: smokes(x, OldGold) => keeps(x, Snail).
    
    // Kools are smoked in the yellow house.
    // Every person who lives in the yellow house, smokes Kools
    ! x y: lives(x, y) & colored(y, Yellow) => smokes(x, Kools).
    
    // Milk is drunk in the middle house.
    // The person who lives in the third house, drinks milk.
    ? x y: lives(x, y) & placed(y, 3) & drinks(x, Milk).
    
    // The Norwegian lives in the first house.
    // The Norwergian lives in the first house
    ? x: lives(Norwegian, x) & placed(x, 1).
    
    // A house A is next to a house B, if the absolute value of the difference between the position of house A and house B is 1.
    {! a b c d: next(a, b) <- abs(c-d) = 1 & placed(a, c) & placed(b, d).}
    
    // The man who smokes Chesterfields lives in the house next to the man with the fox.
    // The absolute value of the difference between the position of the house where the person who smokes Chesterfields lives and the position of the house where the person who keeps a fox lives, is one.
    //? a b c s t u: smokes(a, Chesterfields) & lives(a, b) & placed(b, c) & keeps(s, Fox) & lives(s, t) & placed(t, u) & abs(c-u) = 1.
    // The house where the person who smokes Chesterfields lives, is next to the house where the person who keeps the fox lives.
    ? a b s t: lives(a, b) & smokes(a, Chesterfields) & lives(s, t) & keeps(s, Fox) & next(b, t).
    
    // Kools are smoked in the house next to the house where the horse is kept
    // The absolute value of the difference between the position of the house where the person who smokes Chesterfields lives and the position of the house where the person who keeps a fox lives, is one.
    // The house where the person who smokes Kools lives, is next to the house where the person who keeps a horse lives.
    ? a b s t: lives(a, b) & smokes(a, Kools) & lives(s, t) & keeps(s, Horse) & next(b, t).
    
    // The Lucky Strike smoker drinks orange juice.
    // Every person who drinks LuckyStrike, drinks OrangeJuice
    ! x: smokes(x, LuckyStrike) => drinks(x, OrangeJuice).
    
    // The Japanese smokes Parliaments.
    smokes(Japanese, Parliaments).
    
    // The Norwegian lives next to the blue house.
    // The Norwegian lives in a house next to the blue house.
    ? x y: lives(Norwegian, x) & next(x, y) & colored(y, Blue).
    
    // Now, who drinks water? Who owns the zebra?
    
    // In the interest of clarity, it must be added that each of the five houses is painted a different color, and their inhabitants are of different national extractions, own different pets, drink different beverages and smoke different brands of American cigarets [sic]. One other thing: in statement 6, right means your right
    // Every person keeps exactly one Animal.
    !x: ?=1 y: keeps(x, y).
    //Every person drinks exactly one Drink.
    !x: ?=1 y: drinks(x, y).
    //...
    !x: ?=1 y: smokes(x, y).
    !x: ?=1 y: lives(x, y).
    !x: ?=1 y: colored(x, y).
    !x: ?=1 y: placed(x, y).

    // Every animal is kept by exactly one Person.
    !x: ?=1 y: keeps(y, x).
    //...
    !x: ?=1 y: drinks(y, x).
    !x: ?=1 y: smokes(y, x).
    !x: ?=1 y: lives(y, x).
    !x: ?=1 y: colored(y, x).
    !x: ?=1 y: placed(y, x).
    
    // To have only 1 model (break symmetry).
    placed(House1, 1).
    placed(House2, 2).
    placed(House3, 3).
    placed(House4, 4).
    placed(House5, 5).
}

query DrinksWater : V {
    {p: drinks(p, Water)}
}

query KeepsZebra : V {
    {p: keeps(p, Zebra)}
}

procedure main() {
    stdoptions.nbmodels = 2;
	printmodels(modelexpand(T,S))
    model = modelexpand(T,S)
    print(query(DrinksWater, model[1]))
    print(query(KeepsZebra, model[1]))
    print('Correct solution: Norwegian & Japanese')
}