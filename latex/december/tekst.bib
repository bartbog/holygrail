@inproceedings{Kiziltan2016,
  author =       {Kiziltan, Zeynep and Lippi, Marco and Torroni, Paolo},
  title =        {{Constraint Detection in Natural Language Problem
                  Descriptions}},
  booktitle =    {Proceedings of the 25th International Joint Conference on
                  Artificial Intelligence (IJCAI 2016)},
  year =         2016,
  number =       {Ml},
  pages =        {744--750},
  file =
                  {:home/jens/Documents/2e{\_}master/thesis/papers/IJCAI-16{\_}paper{\_}250
                  (1).pdf:pdf},
  keywords =     {Constraints and Satisfiability},
}

@inproceedings{Pesic2007,
  author =       {Pesic, Maja and Schonenberg, Helen and {Van Der Aalst}, Wil M
                  P},
  title =        {{DECLARE: Full support for loosely-structured processes}},
  booktitle =    {Proceedings - IEEE International Enterprise Distributed Object
                  Computing Workshop, EDOC},
  year =         2007,
  pages =        {287--298},
  doi =          {10.1109/EDOC.2007.4384001},
  abstract =     {Traditional workflow management systems (WFMSs) are not
                  flexible enough to support loosely-structured processes.
                  Furthermore, flexibility in contemporary WFMSs usually comes
                  at a certain cost, such as lack of support for users, lack of
                  methods for model analysis, lack of methods for analysis of
                  past executions, etc. DECLARE is a proto-type of a WFMS that
                  uses a constraint-based process modeling language for the
                  development of declarative models describing
                  loosely-structured processes. In this paper we show how
                  DECLARE can support loosely-structured processes without
                  sacrificing important WFMSs features like user support, model
                  verification, analysis of past executions, changing models at
                  run-time, etc.},
  file =
                  {:home/jens/Documents/2e{\_}master/thesis/papers/04384001.pdf:pdf},
  isbn =         0769528910,
  issn =         15417719,
}

@article{Jastram2010,
  author =       {Jastram, Michael},
  title =        {{ProR , an Open Source Platform for Requirements Engineering
                  based on RIF}},
  year =         {2010},
  file =
                  {:home/jens/Documents/2e{\_}master/thesis/papers/seisconf.pdf:pdf},
}

@article{Schwitter2008,
  author =       {Schwitter, Rolf},
  title =        {{Working for two: A bidirectional grammar for a controlled
                  natural language}},
  journal =      {Lecture Notes in Computer Science (including subseries Lecture
                  Notes in Artificial Intelligence and Lecture Notes in
                  Bioinformatics)},
  volume =       {5360 LNAI},
  pages =        {168--179},
  year =         2008,
  doi =          {10.1007/978-3-540-89378-3_17},
  abstract =     {This paper introduces the controlled natural language PENG
                  Light together with a language processor that is based on a
                  bidirectional grammar. The language processor has the
                  following interesting properties: (a) it translates
                  declarative sentences written in PENG Light into a first-order
                  logic notation (TPTP); (b) it generates declarative sentences
                  in PENG Light taking syntactically annotated TPTP formulas as
                  input; and (c) it translates questions written in PENG Light
                  into (conjunctive) queries in TPTP notation and uses the TPTP
                  representation of the query as a starting point for generating
                  answers in PENG Light. Moreover, the controlled natural
                  language processor can be interfaced directly with an
                  automated reasoner in order to resolve anaphoric references
                  and to answer questions stated in PENG Light.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Schwitter - 2008 - Working for two A
                  bidirectional grammar for a controlled natural
                  language.pdf:pdf},
  isbn =         3540893776,
  issn =         03029743,
  keywords =     {Controlled natural languages,Grammar
                  engineering,Human-computer interfaces,Knowledge
                  representation,Question answering},
}

@article{Konrad2005,
  author =       {Konrad, S. and Cheng, B.H.C.},
  title =        {{Real-time specification patterns}},
  journal =      {Proceedings. 27th International Conference on Software
                  Engineering, 2005. ICSE 2005.},
  number =       {October},
  pages =        {372--381},
  year =         2005,
  doi =          {10.1109/ICSE.2005.1553580},
  url =
                  {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1553580},
  abstract =     {Embedded systems are pervasive and frequently used for
                  critical systems with time-dependent functionality. Dwyer et
                  al. (1999) have developed qualitative specification patterns
                  to facilitate the specification of critical properties, such
                  as those that must be satisfied by embedded systems. Thus far,
                  no analogous repository has been compiled for realtime
                  specification patterns. This paper makes two main
                  contributions: First, based on an analysis of timing-based
                  requirements of several industrial embedded system
                  applications, we created real-time specification patterns in
                  terms of three commonly used real-time temporal logics.
                  Second, as a means to further facilitate the understanding of
                  the meaning of a specification, we offer a structured English
                  grammar that includes support for real-time properties. We
                  illustrate the use of the real-time specification patterns in
                  the context of property specifications of a real-world
                  automotive embedded system.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Konrad, Cheng - Unknown - Real-time
                  Specification Patterns ∗ Categories and Subject
                  Descriptors.pdf:pdf},
  isbn =         {1-59593-963-2},
  keywords =     {Automotive engineering,Computer science,Embedded
                  software,Embedded system,Formal
                  specifications,Laboratories,Logic,Permission,Real time
                  systems,Software engineering,embedded systems,formal
                  specification,pervasive system,real-time specification
                  patterns,real-time temporal logics,structured English
                  grammar,temporal logic},
}

@article{Schwitter2003,
  author =       {Schwitter, Rolf and Ljungberg, Anna and Hood, David},
  title =        {{ECOLE–A Look-ahead Editor for a Controlled Language}},
  journal =      {Eamt-Claw03},
  pages =        {141--150},
  year =         2003,
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Schwitter, Ljungberg, Hood - 2003 - ECOLE–A
                  Look-ahead Editor for a Controlled Language.pdf:pdf},
}

@article{Bruynooghe2014,
  author =       {Bruynooghe, Maurice and Blockeel, Hendrik and Bogaerts, Bart
                  and {De Cat}, Broes and {De Pooter}, Stef and Jansen, Joachim
                  and Labarre, Anthony and Ramon, Jan and Denecker, Marc and
                  Verwer, Sicco},
  title =        {{Predicate logic as a modeling language: modeling and solving
                  some machine learning and data mining problems with IDP3}},
  journal =      {Theory and Practice of Logic Programming},
  volume =       15,
  number =       {May 2014},
  pages =        {1--35},
  year =         2014,
  doi =          {10.1017/S147106841400009X},
  url =
                  {http://www.journals.cambridge.org/abstract{\_}S147106841400009X},
  abstract =     {This paper provides a gentle introduction to problem-solving
                  with the IDP3 system. The core of IDP3 is a finite model
                  generator that supports first-order logic enriched with types,
                  inductive definitions, aggregates and partial functions. It
                  offers its users a modeling language that is a slight
                  extension of predicate logic and allows them to solve a wide
                  range of search problems. Apart from a small introductory
                  example, applications are selected from problems that arose
                  within machine learning and data mining research. These
                  research areas have recently shown a strong interest in
                  declarative modeling and constraint-solving as opposed to
                  algorithmic approaches. The paper illustrates that the IDP3
                  system can be a valuable tool for researchers with such an
                  interest. The first problem is in the domain of stemmatology,
                  a domain of philology concerned with the relationship between
                  surviving variant versions of text. The second problem is
                  about a somewhat related problem within biology where
                  phylogenetic trees are used to represent the evolution of
                  species. The third and final problem concerns the classical
                  problem of learning a minimal automaton consistent with a
                  given set of strings. For this last problem, we show that the
                  performance of our solution comes very close to that of the
                  state-of-the art solution. For each of these applications, we
                  analyze the problem, illustrate the development of a
                  logic-based model and explore how alternatives can affect the
                  performance.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Bruynooghe et al. - 2014 - Predicate logic
                  as a modeling language modeling and solving some machine
                  learning and data mining problems wi.pdf:pdf},
  issn =         {1471-0684},
  keywords =     {FO(⋅),IDP system,declarative modeling,deterministic finite
                  state automaton,knowledge base systems,knowledge
                  representation and reasoning,logic programming,phylogenetic
                  tree,stemmatology},
}

@article{Michael2001,
  author =       {Michael, J.B. and Ong, V.L. and Rowe, N.C.},
  title =        {{Natural-language processing support for developing
                  policy-governed software systems}},
  journal =      {Proceedings 39th International Conference and Exhibition on
                  Technology of Object-Oriented Languages and Systems. TOOLS 39},
  number =       {July},
  pages =        {263--274},
  year =         2001,
  doi =          {10.1109/TOOLS.2001.941679},
  url =
                  {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=941679},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Michael, Ong, Rowe - 2001 -
                  Natural-language processing support for developing
                  policy-governed software systems.pdf:pdf},
  isbn =         {0-7695-1251-8},
}

@article{DalCin2000,
  author =       {{Dal Cin}, M.},
  title =        {{Structured language for specifications of quantitative
                  requirements}},
  journal =      {Proceedings of IEEE International Symposium on High Assurance
                  Systems Engineering},
  volume =       {2000-Janua},
  pages =        {221--227},
  year =         2000,
  doi =          {10.1109/HASE.2000.895466},
  abstract =     {Requirements for dependable systems need to be understandable
                  and, at the same time, have to satisfy consistency and
                  non-ambiguity properties. We provide a means to specify
                  nonfunctional requirements in terms of structured English
                  sentences. We define their syntax by a clear and consistent
                  notation. For verification, these sentences have to be
                  transformed into a notation that can be interpreted by
                  analysis tools. It is shown how this can be achieved via
                  several translation steps},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Dal Cin - 2000 - Structured language for
                  specifications of quantitative requirements.pdf:pdf},
  isbn =         0769509274,
  issn =         15302059,
  keywords =     {Clocks,Information analysis,Logic,Natural
                  languages,Performance analysis,Risk analysis,Specification
                  languages,Stochastic processes,Stochastic systems,System
                  performance},
}

@inproceedings{Konrad,
  author =       {Konrad, Sascha and Cheng, Betty H C},
  title =        {{Real-time Specification Patterns ∗ Categories and Subject
                  Descriptors}},
  pages =        {372--381},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Konrad, Cheng - Unknown - Real-time
                  Specification Patterns ∗ Categories and Subject
                  Descriptors.pdf:pdf},
  isbn =         {1581139632},
  keywords =     {formal specification,patterns,real-time requirements},
}

@article{Nelken,
  author =       {Nelken, Rani and Francez, Nissim},
  title =        {{Automatic Translation of Natural Language System Speci
                  cations into Temporal Logic}},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Nelken, Francez - Unknown - Automatic
                  Translation of Natural Language System Speci cations into
                  Temporal Logic.pdf:pdf},
}

@article{Jak2008,
  author =       {Jakˇ, Mirjana},
  title =        {{Temporal Patterns for Document Verification}},
  number =       {November},
  year =         {2008},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Jakˇ - 2008 - Temporal Patterns for
                  Document Verification.pdf:pdf},
}

@article{Astrahan1975,
  author =       {Astrahan, M. M. and Chamberlin, D. D.},
  title =        {{Implementation of a structured English query language}},
  journal =      {Communications of the ACM},
  volume =       18,
  number =       10,
  pages =        {580--588},
  year =         1975,
  doi =          {10.1145/361020.361215},
  abstract =     {SEQUEL is a nonprocedural language which does not
                  make$\backslash$nuse of quantifiers or other mathematical
                  concepts;$\backslash$nrather, SEQUEL uses a block structured
                  format of$\backslash$nEnglish key words (hence the acronym
                  ``Structured$\backslash$nEnglish Query Language'' ). SEQUEL is
                  intended for$\backslash$ninteractive, problem solving use by
                  people who have$\backslash$nneed for interaction with a large
                  database but who are$\backslash$nnot trained programmers. This
                  class of users includes$\backslash$nurban planners,
                  sociologists, accountants, and
                  other$\backslash$nprofessionals. The objective of the language
                  is to$\backslash$nprovide a simple, easy-to-learn means of
                  expressing the$\backslash$nprimitive actions used by people to
                  obtain information$\backslash$nfrom tables, such as ``look up
                  a value in a column.''$\backslash$nSEQUEL and its companion
                  language, SQUARE, have been$\backslash$nshown to be
                  relationally complete, i.e. equivalent in$\backslash$npower to
                  Codd's relational calculus.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Astrahan, Chamberlin - 1975 -
                  Implementation of a structured English query language.pdf:pdf},
  issn =         00010782,
  keywords =     {22,3,33,34,4,74,75,and phrases,cr categories,data,data
                  organization,database,language,nonprocedural
                  language,query,relational model,structure},
}

@article{Kuhn2008,
  author =       {Kuhn, Tobias and Schwitter, Rolf},
  title =        {{Writing Support for Controlled Natural Languages}},
  journal =      {Proceedings of the Australasian Language Technology
                  Association Workshop 2008},
  number =       {March 2012},
  pages =        {46--54},
  year =         2008,
  doi =          {10.5167/uzh-8120},
  url =
                  {http://www.alta.asn.au/events/alta2008/proceedings/pdf/ALTA2008{\_}07.pdf},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Kuhn, Schwitter - 2008 - Writing Support
                  for Controlled Natural Languages.pdf:pdf},
  issn =         {1834-7037},
}

@article{Flake2002,
  author =       {Flake, Stephan and M{\"{u}}ller, Wolfgang and Ruf,
                  J{\"{u}}rgen},
  title =        {{Structured English for Model Checking Specification}},
  journal =      {Methoden und Beschreibungssprachen zur Modellierung und
                  Verifikation von Schaltungen und Systemen},
  number =       {February},
  pages =        {99--108},
  year =         2002,
  abstract =     {Model checking has received wide acceptance as a valuable
                  technique in the eld of electronic design automation and is
                  currently of growing interest in general systems design.
                  Though its concepts and applications are well understood it
                  often turns out that engineers have severe problems with the
                  specication process and the underlying notation, i.e.,
                  formulation and understanding of specications through means of
                  temporal logic formulae. In this article, we present an
                  approach for a natural language{\{}oriented representation of
                  temporal logic formulae by introducing patterns of structured
                  English sentences for Clocked CTL (CCTL) specication. After
                  outlining the basic patterns of the sentences we give their
                  semantics by a translation to CCTL. A final example
                  demonstrates their application. }},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Flake, M{\"{u}}ller, Ruf - 2002 -
                  Structured English for Model Checking Specification.pdf:pdf},
}

@article{Ross2013,
  author =       {Ross, Ronald G.},
  title =        {{Tabulation Lists in RuleSpeak: A Primer}},
  year =         {2013},
  annote =       {Tabulation in RuleSpeak},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Ross - 2013 - Tabulation Lists in RuleSpeak
                  A Primer.pdf:pdf},
}

@article{Ross2009,
  author =       {Ross, Ronald G},
  title =        {{Basic RuleSpeak Guidelines}},
  pages =        {23},
  year =         {2009},
  url =          {http://www.brsolutions.com},
  abstract =     {What RuleSpeak is RuleSpeak is a set of practical guidelines
                  for {\ldots} Expressing Business Rules in clear, unambiguous,
                  well-structured English. Improving communication about
                  Business Rules among business people, business analysts, and
                  IT professionals. Bridging the gap between the language of
                  business policies and legal obligations, and IT specifications
                  oriented to system design and implementation. Avoiding common
                  pitfalls associated with expressing guidance. Retaining
                  product/service know-how in a manageable, reusable form. In
                  the words of an experienced practitioner {\ldots}},
  annote =       {GUIDELINES, niet formeel!},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Ross - 2009 - Basic RuleSpeak
                  Guidelines.pdf:pdf},
}

@article{Kuhn2010,
  author =       {Kuhn, Tobias},
  title =        {{An evaluation framework for controlled natural languages}},
  journal =      {Controlled Natural Language},
  pages =        {1--20},
  year =         2010,
  doi =          {10.1007/978-3-642-14418-9_1},
  url =          {http://www.springerlink.com/index/LL26N53P624QWN41.pdf},
  abstract =     {This paper presents a general framework called ontographs that
                  relies on a graphical notation and enables the
                  tool-independent and reliable evaluation of human
                  understandability of knowledge represen- tation languages. An
                  experiment with 64 participants is presented that applies this
                  framework and compares a controlled natural language to a
                  common formal language. The results show that the controlled
                  natural language is easier to understand, needs less learning
                  time, and is more accepted by its users.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Kuhn - 2010 - An Evaluation Framework for
                  Controlled Natural Languages.pdf:pdf},
  isbn =         {978-3-642-14418-9},
}

@article{Ross2013a,
  author =       {Ross, Ronald G.},
  title =        {{Decision Tables: A Primer - How to Use TableSpeak}},
  year =         {2013},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Ross - 2013 - Decision Tables A Primer -
                  How to Use TableSpeak.pdf:pdf},
  keywords =     {business rules,decision,decision table},
}

@article{Ostermayer2012,
  author =       {Ostermayer, Ludwig and Seipel, Dietmar},
  title =        {{Knowledge engineering for business rules in prolog}},
  journal =      {Proceedings of the 26th Workshop on Logic Programming},
  pages =        {24--25},
  year =         2012,
  url =
                  {http://www1.pub.informatik.uni-wuerzburg.de/databases/papers/wlp{\_}2012{\_}8.pdf},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Ostermayer, Seipel - 2012 - Knowledge
                  engineering for business rules in prolog.pdf:pdf},
  keywords =     {business,business rules,knowledge engineering,logic
                  programming},
}

@article{Spreeuwenberg2010,
  author =       {Spreeuwenberg, Silvie and Healy, Keri Anderson},
  title =        {{SBVR ' s Approach to Controlled Natural Language}},
  journal =      {Controlled Natural Language},
  pages =        {155--169},
  year =         2010,
  url =
                  {http://link.springer.com/chapter/10.1007/978-3-642-14418-9{\_}10},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Spreeuwenberg, Healy - 2010 - SBVR ' s
                  Approach to Controlled Natural Language.pdf:pdf},
  keywords =     {business rules,business vocabulary,semantic,semantics},
}

@article{Kuhn2014,
  author =       {Gravano, Agustin},
  title =        {{Turn-taking and affirmative cue words in task-oriented
                  dialogue}},
  journal =      {Dissertation Abstracts International, B: Sciences and
                  Engineering},
  volume =       70,
  number =       8,
  pages =        4943,
  year =         2010,
  doi =          {10.1162/COLI},
  abstract =     {We propose an architecture for expressing various
                  linguistically-motivated features that help identify
                  multi-word expressions in nat- ural language texts. The
                  architecture com- bines various linguistically-motivated clas-
                  sification features in a Bayesian Network. We introduce novel
                  ways for computing many of these features, and manually de-
                  fine linguistically-motivated interrelationships among them,
                  which the Bayesian network models. Our methodology is almost
                  en- tirely unsupervised and completely language- independent;
                  it relies on few language re- sources and is thus suitable for
                  a large num- ber of languages. Furthermore, unlike much recent
                  work, our approach can identify ex- pressions of various types
                  and syntactic con- structions. We demonstrate a significant
                  im- provement in identification accuracy, com- pared with less
                  sophisticated baselines.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Kuhn - 2014 - A Survey and Classification
                  of Controlled Natural Languages.pdf:pdf},
  isbn =         9781608459858,
  issn =         04194217,
}

@inproceedings{Davis2010,
  author =       {Davis, Brian and Dantuluri, Pradeep and Dragan, Laura and
                  Handschuh, Siegfried and Cunningham, Hamish},
  title =        {{On designing controlled natural languages for semantic
                  annotation}},
  booktitle =    {Lecture Notes in Computer Science (including subseries Lecture
                  Notes in Artificial Intelligence and Lecture Notes in
                  Bioinformatics)},
  year =         2010,
  volume =       {5972 LNAI},
  pages =        {187--205},
  doi =          {10.1007/978-3-642-14418-9_12},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Davis et al. - 2010 - On Designing
                  Controlled Natural Languages for Semantic Annotation.pdf:pdf},
  isbn =         3642144179,
  issn =         03029743,
}

@article{Kuhn2013,
  author =       {Kuhn, Tobias},
  title =        {{A Principled Approach to Grammars for Controlled Natural
                  Languages and Predictive Editors}},
  journal =      {Journal of Logic, Language and Information},
  volume =       22,
  number =       1,
  pages =        {33--70},
  year =         2013,
  doi =          {10.1007/s10849-012-9167-z},
  abstract =     {Controlled natural languages (CNL) with a direct mapping to
                  formal logic have been proposed to improve the usability of
                  knowledge representation systems, query interfaces, and formal
                  specifications. Predictive editors are a popular approach to
                  solve the problem that CNLs are easy to read but hard to
                  write. Such predictive editors need to be able to "look ahead"
                  in order to show all possible continuations of a given
                  unfinished sentence. Such lookahead features, however, are
                  difficult to implement in a satisfying way with existing
                  grammar frameworks, especially if the CNL supports complex
                  nonlocal structures such as anaphoric references. Here,
                  methods and algorithms are presented for a new grammar
                  notation called Codeco, which is specifically designed for
                  controlled natural languages and predictive editors. A parsing
                  approach for Codeco based on an extended chart parsing
                  algorithm is presented. A large subset of Attempto Controlled
                  English (ACE) has been represented in Codeco. Evaluation of
                  this grammar and the parser implementation shows that the
                  approach is practical, adequate and efficient.},
  archivePrefix ={arXiv},
  arxivId =      {1211.3643},
  eprint =       {1211.3643},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Kuhn - Unknown - A Principled Approach to
                  Grammars for Controlled Natural Languages and Predictive
                  Editors.pdf:pdf},
  issn =         09258531,
  keywords =     {Anaphoric references,Attempto Controlled English,Chart
                  parsing,Controlled natural languages,Predictive editors},
}

@article{Ross2009a,
  author =       {Ross, Ronald G},
  title =        {{RuleSpeak Sentence Forms}},
  journal =      {RuleSpeak},
  pages =        10,
  year =         2009,
  abstract =     {A practical implementation of the SBVR method of desiging bus.
                  terms and rules},
  annote =       {Welke zinsstructuren toegelaten zijn},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Ross - 2009 - RuleSpeak Sentence
                  Forms.pdf:pdf},
}

@inproceedings{Wyner2010,
  author =       {Wyner, Adam and Angelov, Krasimir and Barzdins, Guntis and
                  Damljanovic, Danica and Davis, Brian and Fuchs, Norbert and
                  Hoefler, Stefan and Jones, Ken and Kaljurand, Kaarel and Kuhn,
                  Tobias and Luts, Martin and Pool, Jonathan and Rosner, Mike
                  and Schwitter, Rolf and Sowa, John},
  title =        {{On controlled natural languages: Properties and prospects}},
  booktitle =    {Lecture Notes in Computer Science (including subseries Lecture
                  Notes in Artificial Intelligence and Lecture Notes in
                  Bioinformatics)},
  year =         2010,
  volume =       {5972 LNAI},
  pages =        {281--289},
  doi =          {10.1007/978-3-642-14418-9_17},
  abstract =     {This collaborative report highlights the properties and
                  prospects of Controlled Natural Languages (CNLs). The report
                  poses a range of questions concerning the goals of the CNL,
                  the design, the linguistic aspects, the relationships and
                  evaluation of CNLs, and the application tools. In posing the
                  questions, the report attempts to structure the field of CNLs
                  and to encourage further systematic discussion by researchers
                  and developers.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Wyner et al. - 2010 - On Controlled Natural
                  Languages Properties and Prospects.pdf:pdf},
  isbn =         3642144179,
  issn =         03029743,
}

@article{Clark2005,
  author =       {Clark, Peter and Harrison, Philip and Jenkins, Thomas and
                  Thompson, John A and Wojcik, Richard H},
  title =        {{Acquiring and Using World Knowledge Using a Restricted Subset
                  of English.}},
  journal =      {FLAIRS Conference},
  pages =        {506--511},
  year =         2005,
  annote =       {CPL: nogal oud},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Clark et al. - 2005 - Acquiring and Using
                  World Knowledge Using a Restricted Subset of English.pdf:pdf},
  isbn =         1577352343,
}

@article{Dellis2010,
  author =       {Dellis, NC},
  title =        {{Using Controlled Natural Language for World Knowledge
                  Reasoning}},
  year =         {2010},
  url =          {http://scholarlyrepository.miami.edu/oa{\_}theses/48/},
  annote =       {Thesis rond combineren Attempto Controlled English met KBs om
                  queries te beantwoorden (en bewijzen)},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Dellis - 2010 - Using Controlled Natural
                  Language for World Knowledge Reasoning.pdf:pdf},
  keywords =     {Answer Engine,Automated Reasoning,Query System},
}

@article{OMG2008,
  author =       {OMG},
  title =        {{Semantics of Business Vocabulary and Business Rules (SBVR),
                  v1.0. OMG Available Specification.
                  http://www.omg.org/docs/formal/08-01-02.pdf}},
  number =       {May},
  pages =        {392},
  year =         {2008},
  url =          {http://www.omg.org/spec/QVT/1.0/PDF},
  annote =       {SBVR specificatie},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/OMG - 2008 - Semantics of Business
                  Vocabulary and Business Rules (SBVR), v1.0. OMG Available
                  Specification. httpwww.omg.orgdocsformal08-.pdf:pdf},
}

@article{Schwitter2005,
  author =       {Schwitter, Rolf},
  title =        {{Controlled natural language as interface language to the
                  semantic web}},
  journal =      {2nd Indian International Conference on Artificial},
  pages =        {1699--1718},
  year =         2005,
  url =
                  {http://web.science.mq.edu.au/{~}rolfs/papers/IICAI-schwitter-2005.pdf},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Schwitter - 2005 - Controlled natural
                  language as interface language to the semantic web.pdf:pdf},
}

@article{Schwitter2006,
  author =       {Schwitter, Rolf and Tilbrook, Marc},
  title =        {{Let's talk in description logic via controlled natural
                  language}},
  year =         {2006},
  annote =       {vooral voor OWL},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Schwitter, Tilbrook - 2006 - Let's talk in
                  description logic via controlled natural language.pdf:pdf},
}

@article{White2009,
  author =       {White, Colin and Schwitter, Rolf},
  title =        {{An Update on PENG Light}},
  journal =      {Proceedings of the Australasian Language Technology
                  Association Workshop},
  pages =        {80--88},
  year =         2009,
  annote =       {Firefox extensie, woord voorspelling},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/White, Schwitter - 2009 - An Update on PENG
                  Light.pdf:pdf},
}

@article{Wahlster,
  author =       {Wahlster, Wolfgang},
  title =        {{The Role of Natural Language in Advanced Knowledge-Based
                  Systems}},
  pages =        {1--19},
  abstract =     {Natural language processing is a prerequisite for advanced
                  knowledge-based systems since the ability to acquire,
                  retrieve, exploit and present knowledge critically depends on
                  natural language comprehension and production. Natural
                  language concepts guide the interpretation of what we see,
                  hear, read, or experience with other senses. In the first part
                  of the paper, we illustrate the needed capabilities of
                  cooperative dialog systems with a detailed example: the
                  interaction between a customer and a clerk at an information
                  desk in a train station. It is shown, that natural language
                  systems cannot just rely on knowledge about syntactical and
                  semantical aspects of language but also have to exploit
                  conceptual and inferential knowledge, and a user model. In the
                  remainder, we analyze and evaluate three natural language
                  systems which were introduced to the commercial market in
                  1985: Language Craft™ by Carnegie Group Inc., NLMenu by Texas
                  Instruments Inc., and Q {\&} A™ by Symantec Inc. The detailed
                  examination of these systems shows their capabilities and
                  limitations. We conclude that the technology for limited
                  natural language access systems is available now, but that in
                  the forseeable future the capabilities of such systems in no
                  way match human performance in face-to-face communication.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Wahlster - Unknown - The Role of Natural
                  Language in Advanced Knowledge-Based Systems.pdf:pdf},
}

@article{Bajwa2012,
  author =       {Bajwa, Imran Sarwar and Lee, Mark and Bordbar, Behzad},
  title =        {{Translating natural language constraints to OCL}},
  journal =      {Journal of King Saud University - Computer and Information
                  Sciences},
  volume =       24,
  number =       2,
  pages =        {117--128},
  year =         2012,
  doi =          {10.1016/j.jksuci.2011.12.003},
  url =          {http://dx.doi.org/10.1016/j.jksuci.2011.12.003},
  abstract =     {Object Constraint Language (OCL) is the only available
                  language to annotate the Unified Modeling Language (UML) based
                  conceptual schema (CS) of a software application. In practice,
                  the constraints are captured in a natural language (NL) such
                  as English and then an OCL expert manually transforms the NL
                  expressions to OCL syntax. However, it is a common knowledge
                  that OCL is difficult to write specifically for the novel
                  users with little or no prior knowledge of OCL. In recent
                  times, model transformation technology has made transformation
                  of one language to another simpler and easier. In this paper
                  we present a novel approach to automatically transform NL
                  specification of software constraints to OCL constraints. In
                  NL to OCL transformation, Semantics of Business Vocabulary and
                  Rules (SBVR) standard is used as an intermediate
                  representation due to a couple of reasons: first of all, SBVR
                  is based on higher order logic that simplifies the
                  transformation of SBVR to other formal languages such as OCL.
                  Moreover, SBVR used syntax of natural language and thus is
                  close to human beings. The presented NL to OCL transformation
                  via SBVR will not only simplify the process of generating OCL
                  constraints but also generate accurate models in less time.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Bajwa, Lee, Bordbar - 2012 - Translating
                  natural language constraints to OCL.pdf:pdf},
  isbn =         {1319-1578},
  issn =         13191578,
  keywords =     {english constraints,natural language processing},
}

@article{Pease2010,
  author =       {Pease, Adam and Li, John},
  title =        {{Controlled english to logic translation}},
  journal =      {Theory and Applications of Ontology: Computer Applications},
  pages =        {245--258},
  year =         2010,
  doi =          {10.1007/978-90-481-8847-5_11},
  annote =       {Controlled English to Logic Translation using ontology},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Pease, Li - 2010 - Controlled english to
                  logic translation.pdf:pdf},
  isbn =         9789048188468,
}

@article{Schwitter2004,
  author =       {Schwitter, R and Tilbrook, M},
  title =        {{Controlled Natural Language meets the Semantic Web}},
  journal =      {Proceedings of the Australasian Language Technology Workshop},
  pages =        {55--62},
  year =         2004,
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Schwitter, Tilbrook - 2004 - Controlled
                  Natural Language meets the Semantic Web.pdf:pdf},
}

@article{Fantechi1994,
  author =       {Fantechi, A. and Gnesi, S. and Ristori, G. and Carenini, M.
                  and Vanocchi, M. and Moreschini, P.},
  title =        {{Assisting requirement formalization by means of natural
                  language translation}},
  journal =      {Formal Methods in System Design},
  volume =       4,
  number =       3,
  pages =        {243--263},
  year =         1994,
  doi =          {10.1007/BF01384048},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Fantechi et al. - 1994 - Assisting
                  requirement formalization by means of natural language
                  translation.pdf:pdf},
  issn =         09259856,
  keywords =     {action-based logics,natural language,requirement
                  formalization},
}

@article{Fuchs2008,
  author =       {Fuchs, Norbert E. and Kaljurand, Kaarel and Kuhn, Tobias},
  title =        {{Attempto controlled english for knowledge representation}},
  journal =      {Lecture Notes in Computer Science (including subseries Lecture
                  Notes in Artificial Intelligence and Lecture Notes in
                  Bioinformatics)},
  volume =       {5224 LNCS},
  pages =        {104--124},
  year =         2008,
  doi =          {10.1007/978-3-540-85658-0_3},
  abstract =     {Abstract Attempto Controlled English (ACE) is a controlled
                  natural language, ie a precisely defined subset of English
                  that can automatically and unambiguously be translated into
                  first- order logic. ACE may seem to be completely natural, but
                  is actually a formal language, ...},
  annote =       {Multi-woorden moeten met streepje: {\textgreater} A student is
                  interested-in a course vs. {\textgreater} A student is
                  interested in a classroom. Paraphrase beschikbaar voor zeker
                  te zijn juiste interpretatie Course:
                  http://attempto.ifi.uzh.ch/site/courses/files/bonn2008.pdf
                  Open problemen: - rules do not always lead to natural
                  interpretation - sometimes result in stilted English - Can we
                  control all ambiguities with this strategy? - Does strategy
                  scale up to a larger fragment of ACE?},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Fuchs, Kaljurand, Kuhn - 2008 - Attempto
                  controlled english for knowledge representation.pdf:pdf},
  isbn =         3540856560,
  issn =         03029743,
}

@article{Ambriola1997,
  author =       {Ambriola, V and Gervasi, Vincenzo},
  title =        {{Processing natural language requirements}},
  journal =      {Proceedings 12th IEEE International Conference Automated
                  Software Engineering},
  pages =        {36--45},
  year =         1997,
  doi =          {10.1109/ASE.1997.632822},
  url =
                  {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=632822},
  abstract =     {The importance of requirements, which in practice often means
                  natural language requirements, for a successful software
                  project cannot be underestimated. Although requirement
                  analysis has been traditionally reserved to the experience of
                  professionals, there is no reason not to use various automatic
                  techniques to the same end. In this paper we present Circe, a
                  Web-based environment for aiding in natural language
                  requirements gathering, elicitation, selection, and validation
                  and the tools it integrates. These tools have been used in
                  several experiments both in academic and in industrial
                  environments. Among other features, Circe can extract
                  abstractions from natural language texts, build various models
                  of the system described by the requirements, check the
                  validity of such models, and produce functional metric
                  reports. The environment can be easily extended to enhance its
                  natural language recognition power or to add new models and
                  views on them},
  annote =       {Circo tool Vooral werk in requirements engineering. Custom
                  rules based on type of diagram (dataflow, ...)},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Ambriola, Gervasi - 1997 - Processing
                  natural language requirements.pdf:pdf},
  isbn =         {0-8186-7961-1},
  keywords =     {Circe,Decoding,Documentation,Failure analysis,Information
                  analysis,Information resources,Natural language
                  processing,Natural languages,Power engineering and
                  energy,Power system modeling,Web-based
                  environment,Writing,formal specification,formal
                  verification,functional metric reports,natural language
                  recognition,natural language requirements,natural language
                  requirements processing,natural language texts,natural
                  languages,programming environments,requirement
                  analysis,selection,software project,systems
                  analysis,validation},
}

@article{Levy2013,
  author =       {L{\'{e}}vy, Fran{\c{c}}ois and Nazarenko, Adeline},
  title =        {{Formalization of natural language regulations through sbvr
                  structured english (tutorial)}},
  journal =      {Lecture Notes in Computer Science (including subseries Lecture
                  Notes in Artificial Intelligence and Lecture Notes in
                  Bioinformatics)},
  volume =       {8035 LNCS},
  pages =        {19--33},
  year =         2013,
  doi =          {10.1007/978-3-642-39617-5-5},
  annote =       {Gewoon beschrijving van een manueel proces},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/L{\'{e}}vy, Nazarenko - 2013 -
                  Formalization of natural language regulations through sbvr
                  structured english (tutorial).pdf:pdf},
  isbn =         9783642396168,
  issn =         03029743,
}

@article{Fuchs,
  author =       {Fuchs, N.E. and Schwertel, U. and Torge, S.},
  title =        {{Controlled natural language can replace first-order logic}},
  journal =      {14th IEEE International Conference on Automated Software
                  Engineering},
  pages =        {295--298},
  doi =          {10.1109/ASE.1999.802325},
  url =
                  {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=802325},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Fuchs, Schwertel, Torge - Unknown -
                  Controlled natural language can replace first-order
                  logic.pdf:pdf},
  isbn =         {0-7695-0415-9},
}

@article{Neill2003,
  author =       {Neill, C.J. and Laplante, P.a.},
  title =        {{Requirements engineering: The state of the practice}},
  journal =      {IEEE Software},
  volume =       20,
  number =       6,
  pages =        {40--45},
  year =         2003,
  doi =          {10.1109/MS.2003.1241365},
  url =
                  {http://ieeexplore.ieee.org/xpls/abs{\_}all.jsp?arnumber=1241365},
  abstract =     {Little contemporary data exists for document actual practices
                  of software professionals for software requirements
                  elicitation, requirements specification, document development,
                  and specification validation. This exploratory survey and its
                  quantitative results offer opportunities for further
                  interpretation and comparison.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Neill, Laplante - 2003 - Requirements
                  engineering The state of the practice.pdf:pdf},
  issn =         {0740-7459},
  pmid =         991663109468517369,
}

@article{Gervasi2002,
  author =       {Gervasi, Vincenzo and Nuseibeh, Bashar},
  title =        {{Lightweight validation of natural language requirements}},
  journal =      {Software - Practice and Experience},
  volume =       32,
  number =       2,
  pages =        {113--133},
  year =         2002,
  doi =          {10.1002/spe.430},
  abstract =     {In this paper, we report on our experiences of using
                  lightweight formal methods for the partial validation of
                  natural language requirements documents. We describe our
                  approach to checking properties of models obtained by shallow
                  parsing of natural language requirements, and apply it to a
                  case study based on part of a NASA specification of the Node
                  Control Software on the International Space Station. The
                  experience reported supports our position that it is feasible
                  and useful to perform automated analysis of requirements
                  expressed in natural language. Indeed, we identified a number
                  of errors in our case study that were also independently
                  discovered and corrected by NASA's Independent Validation and
                  Verification Facility in a subsequent version of the same
                  document, and others that were not discovered. The paper
                  describes the techniques we used, the errors we found and
                  reflects on the lessons earned.},
  annote =       {Gelijkaardig aan doel thesis},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Gervasi, Nuseibeh - 2002 - Lightweight
                  validation of natural language requirements.pdf:pdf},
  isbn =         {VO -},
  issn =         00380644,
  keywords =     {Lightweight formal methods,Natural language
                  requirements,Requirements validation},
}

@article{Ambriola1997a,
  author =       {Ambriola, V. and Gervasi, V.},
  title =        {{An environment for cooperative construction of
                  natural-language requirement bases}},
  journal =      {Proceedings 8th Conference on Software Engineering
                  Environments},
  pages =        {124--130},
  year =         1997,
  doi =          {10.1109/SEE.1997.591824},
  url =
                  {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=591824},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Ambriola, Gervasi - 1997 - An environment
                  for cooperative construction of natural-language requirement
                  bases.pdf:pdf},
  isbn =         {0-8186-8019-9},
}

@article{Njonko2014,
  author =       {Njonko, Paul Brillant Feuto and Cardey, Sylviane and
                  Greenfield, Peter and {El Abed}, Walid},
  title =        {{RuleCNL: A controlled natural language for business rule
                  specifications}},
  journal =      {Lecture Notes in Computer Science (including subseries Lecture
                  Notes in Artificial Intelligence and Lecture Notes in
                  Bioinformatics)},
  volume =       {8625 LNAI},
  pages =        {66--77},
  year =         2014,
  doi =          {10.1007/978-3-319-10223-8_7},
  abstract =     {Business rules represent the primary means by which companies
                  define their business, perform their actions in order to reach
                  their objectives. Thus, they need to be expressed
                  unambiguously to avoid inconsistencies between business
                  stakeholders and formally in order to be machine-processed. A
                  promising solution is the use of a controlled natural language
                  (CNL) which is a good mediator between natural and formal
                  languages. This paper presents RuleCNL, which is a CNL for
                  defining business rules. Its core feature is the alignment of
                  the business rule definition with the business vocabulary
                  which ensures traceability and consistency with the business
                  domain. The RuleCNL tool provides editors that assist
                  end-users in the writing process and automatic mappings into
                  the Semantics of Business Vocabulary and Business Rules (SBVR)
                  standard. SBVR is grounded in first order logic and includes
                  constructs called semantic formulations that structure the
                  meaning of rules. {\textcopyright} 2014 Springer International
                  Publishing Switzerland.},
  annote =       {Geen duidelijkheid over semantiek, nooit gecite!!!},
  archivePrefix ={arXiv},
  arxivId =      {1406.2096},
  eprint =       {1406.2096},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Njonko et al. - 2014 - RuleCNL A controlled
                  natural language for business rule specifications.pdf:pdf},
  isbn =         9783319102221,
  issn =         16113349,
  keywords =     {Automatic Mapping,Business Rule,Controlled Natural
                  Language,Semantics of Business Vocabulary and Business Rule},
}

@article{Gervasi2005,
  author =       {Gervasi, Vincenzo and Zowghi, Didar},
  title =        {{Reasoning about inconsistencies in natural language
                  requirements}},
  journal =      {ACM Trans. Softw. Eng. Methodol.},
  volume =       14,
  number =       3,
  pages =        {277--330},
  year =         2005,
  doi =          {10.1145/1072997.1072999},
  url =
                  {http://doi.acm.org/10.1145/1072997.1072999{\%}5Cnhttp://dl.acm.org/ft{\_}gateway.cfm?id=1072999{\&}type=pdf},
  abstract =     {The use of logic in identifying and analyzing inconsistency in
                  requirements from multiple stakeholders has been found to be
                  effective in a number of studies. Nonmonotonic logic is a
                  theoretically well-founded formalism that is especially suited
                  for supporting the evolution of requirements. However, direct
                  use of logic for expressing requirements and discussing them
                  with stakeholders poses serious usability problems, since in
                  most cases stakeholders cannot be expected to be fluent with
                  formal logic. In this article, we explore the integration of
                  natural language parsing techniques with default reasoning to
                  overcome these difficulties. We also propose a method for
                  automatically discovering inconsistencies in the requirements
                  from multiple stakeholders, using both theorem-proving and
                  model-checking techniques, and show how to deal with them in a
                  formal manner. These techniques were implemented and tested in
                  a prototype tool called CARL. The effectiveness of the
                  techniques and of the tool are illustrated by a classic
                  example involving conflicting requirements from multiple
                  stakeholders.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Gervasi, Zowghi - 2005 - Reasoning about
                  inconsistencies in natural language requirements.pdf:pdf},
  isbn =         {1049-331X},
  issn =         {1049-331X},
}

@article{Luisa2004,
  author =       {Luisa, Mich and Mariangela, Franch and Pierluigi, Novi
                  Inverardi},
  title =        {{Market Research for Requirements Analysis Using Linguistic
                  Tools}},
  journal =      {Requirements Engineering},
  volume =       9,
  number =       1,
  pages =        {40--56},
  year =         2004,
  doi =          {10.1007/s00766-003-0179-8},
  url =          {http://dl.acm.org/citation.cfm?id=1008824},
  abstract =     {Numerous studies in recent months have proposed the use of
                  linguistic instruments to support requirements analysis. There
                  are two main reasons for this: (i) the progress made in
                  natural language processing, (ii) the need to provide the
                  developers of software systems with support in the early
                  phases of requirements definition and conceptual modelling.
                  This paper presents the results of an online market research
                  intended (a) to assess the economic advantages of developing a
                  CASE tool that integrates linguistic analysis techniques for
                  documents written in natural language, and (b) to verify the
                  existence of potential demand for such a tool. The research
                  included a study of the language ranging from completely
                  natural to highly restricted used in documents available for
                  requirements analysis, an important factor given that on a
                  technological level there is a trade-off between the language
                  used and the performance of the linguistic instruments. To
                  determine the potential demand for such tool, some of the
                  survey questions dealt with the adoption of development
                  methodologies and consequently with models and support tools;
                  other questions referred to activities deemed critical by the
                  companies involved. Through statistical correspondence
                  analysis of the responses, we were able to outline two
                  "profiles" of companies that correspond to two potential
                  market niches which are characterised by their very different
                  approach to software development.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Luisa, Mariangela, Pierluigi - 2004 -
                  Market Research for Requirements Analysis Using Linguistic
                  Tools.pdf:pdf},
  isbn =         {0947-3602},
  issn =         {0947-3602},
  keywords =     {1 objectives and structure,conceptual modelling {\ae}
                  market,nlp-based case tools {\ae},of the paper,potential
                  demand {\ae},requirements analysis,research {\ae}},
}

@article{Berry2003,
  author =       {Berry, Daniel M.; Erik Kamsties},
  title =        {{From Contract Drafting to Software Specification: Linguistic
                  Sources of Ambiguity}},
  journal =      {Automated Software Engineering, 1997 {\ldots}},
  pages =        {1--80},
  year =         2003,
  url =
                  {https://cs.uwaterloo.ca/{~}dberry/handbook/ambiguityHandbook.pdf{\%}5Cnhttp://ieeexplore.ieee.org/xpls/abs{\_}all.jsp?arnumber=632822{\%}5Cnhttp://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.9.7928{\&}rep=rep1{\&}type=pdf},
  abstract =     {This handbook is about writing software requirements
                  specifications and legal contracts, two kinds of docu- ments
                  with similar needs for completeness, consistency, and
                  precision. Particularly when these are written, as they
                  usually are, in natural language, ambiguity—by any
                  definition—is a major cause of their not specifying what they
                  should. Simple misuse of the language in which the document is
                  written is one source of these ambiguities. This handbook
                  describes the ambiguity phenomenon from several points of
                  view, including linguistics, software engineering, and the
                  law. Several strategies for avoiding and detecting ambiguities
                  are presented. Strong emphasis is given on the problems
                  arising from the use of heavily used and seemingly unambiguous
                  words and phrases such as “all”, “each”, and “every” in
                  defining or referencing sets; positioning of “only”, “also”,
                  and “even”; precedences of “and” and “or”; “a”, “all”, “any”,
                  “each”, “one”, “some”, and “the” used as quantifiers; “or” and
                  “and/or”; “that” vs. “which”; parallelism; pronouns referring
                  to an idea; multiple adjectives; etc. Many examples from
                  requirements documents and legal documents are examined. While
                  no guide can overcome the careless or indifferent writer, this
                  handbook is offered as a guide both for writing better
                  requirements or contracts and for inspecting them for
                  potential ambiguities. 1},
  annote =       {lijst van veel mogelijke ambigu{\"{i}}teiten in taal},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Berry - 2003 - From Contract Drafting to
                  Software Specification Linguistic Sources of
                  Ambiguity.pdf:pdf},
}

@article{Erbach1995,
  author =       {Erbach, Gregor},
  title =        {{ProFit - Prolog with Features, Inheritance, and Templates}},
  journal =      {Proceedings of the 7th Conference of the European Chapter of
                  the Association for Computational Linguistics. EACL-95, March
                  27-31, University College Dublin, Ireland},
  pages =        {180--187},
  year =         1995,
  doi =          {http://dx.doi.org/10.3115/976973.976999},
  abstract =     {ProFIT is an extension of Standard Prolog with Features,
                  Inheritance and Templates. ProFIT allows the programmer or
                  grammar developer to declare an inheritance hierarchy,
                  features and templates. Typed feature terms can be used in
                  ProFIT programs together with Prolog terms to provide a
                  clearer description language for linguistic structures. ProFIT
                  compiles all typed feature terms into a Prolog term
                  representation, so that the built-in Prolog term unification
                  can be used for the unification of typed feature structures,
                  and no special unification algorithm is needed. ProFIT
                  programs are compiled into Prolog programs, so that no
                  meta-interpreter is needed for their execution. ProFIT thus
                  provides a direct step from grammars developed with typed
                  feature terms to Prolog programs usable for applications.},
  file =         {:home/jens/.local/share/data/Mendeley Ltd./Mendeley
                  Desktop/Downloaded/Erbach - 1995 - ProFit - Prolog with
                  Features, Inheritance, and Templates.pdf:pdf},
}
