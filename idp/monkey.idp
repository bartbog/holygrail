// Monkey Business (https://dmcommunity.org/challenge/challenge-nov-2015/)
// Mrs. Robinson’s 4th grade class took a field trip to the local zoo. The day was sunny and warm – a perfect day to spend at the zoo. The kids had a great time and the monkeys were voted the class favorite animal. The zoo had four monkeys – two males and two females. It was lunchtime for the monkeys and as the kids watched,
// each one ate a different fruit in their favorite resting place:
// Sam, who doesn’t like bananas, likes sitting on the grass
// The monkey who sat on the rock ate the apple. The monkey who ate the pear didn’t sit on the tree branch
// Anna sat by the stream but she didn’t eat the pear
// Harriet didn’t sit on the tree branch. Mike doesn’t like oranges.

vocabulary V {
    // There are exactly 4 monkeys: Sam, Anna, Mike and Harriet
    type Monkey constructed from {Sam, Anna, Mike, Harriet}

    // There are exactly 4 places: the grass, the tree bench, by the stream and the rock
    type Place constructed from {Grass, Tree, Stream, Rock}

    // There are exactly 4 types of food: bananas, oranges, apples, pears
    type Food constructed from {Banana, Orange, Apple, Pear}

    // A monkey eats a food.
    eat(Monkey): Food
    // A monkey rests at a place.
    rest_at(Monkey): Place
}

structure S : V {
}

theory T : V {
    // each one ate a different fruit in their favorite resting place:
    // There is no fruit that is eaten by 2 or more monkeys.
    ~ ? f: ? >= 2 x: eat(x) = f.
    //~ ?x y f: eat(x) = f & eat(y) = f & x ~= y.

	// Sam, who doesn’t like bananas, likes sitting on the grass
    // Sam doesn't eat bananas
    ~ eat(Sam) = Banana.
    // Sam rests on the grass
    rest_at(Sam) = Grass.

	// The monkey who sat on the rock ate the apple.
    // The monkey who rests on the rock, eats the apple
    ?=1 x: rest_at(x) = Rock.
    ?=1 x: rest_at(x) = Rock & eat(x) = Apple.

    // The monkey who ate the pear didn’t rest on the tree branch
    // The monkey who eats the pear, didn't rest on the tree branch
    ?=1 x: eat(x) = Pear.
    ?=1 x: eat(x) = Pear & ~ rest_at(x) = Tree.

    // There is a monkey that rest on the rock and eats an apple
    ?x: rest_at(x) = Rock & eat(x) = Apple.

	// Anna sat by the stream but she didn’t eat the pear
    // Anna rests by the stream
    rest_at(Anna) = Stream.
    // Anna didn't eat the pear
    ~ eat(Anna) = Pear.

	// Harriet didn’t rest on the tree branch.
    ~ rest_at(Harriet) = Tree.

    // Mike doesn’t eat oranges.
    ~ eat(Mike) = Orange.

    // Everyone eats something
    // implied in vocabulary.
    // !x: ?y: eat(x) = y.

    // Everyone rests somewhere
    // !x: ?y: rest_at(x) = y.

    // Everyone rests only at one place
    // !x: ?=1 y: rest_at(x) = y.

    //No 2 monkeys rest at the same place
    // There is no place where 2 or more monkeys rest.
    ~ ? p: ? >= 2 x: rest_at(x) = p.
}

procedure main() {
    stdoptions.nbmodels = 2;
	printmodels(modelexpand(T,S))
}
