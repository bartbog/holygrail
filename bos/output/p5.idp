// Problem p5

vocabulary V {
    type year = {109; 110; 111; 112; 113} isa int
    type native constructed from {the_other_native, mattie, ernesto, roxanne, zachary}
    type type1 constructed from {the_other_type1, oregon, kansas, washington, alaska}
    type type2 constructed from {the_other_type2, tehama, zearing, plymouth, shaver_lake}

    is_old(native, year)
    of(native, type1)
    lives_in(native, type2)
    from(native, type1)
}

structure S : V {
}

theory T : V {
    // Mattie is 113 years old
    is_old(mattie,113).

    // The person who lives in Tehama is a native of either Kansas or Oregon
    ?a [native] b [native]: lives_in(a,tehama) & (of(b,kansas) | of(b,oregon)) & b = a.

    // The Washington native is 1 year older than Ernesto
    ?c [native] d [year] e [year]: is_old(ernesto,d) & e = d+1 & is_old(c,e) & of(c,washington).

    // Roxanne is 2 years younger than the Kansas native
    ?f [year] g [native] h [year]: is_old(g,f) & of(g,kansas) & h = f-2 & is_old(roxanne,h).

    // The person who lives in Zearing isn't a native of Alaska
    ?i [native]: lives_in(i,zearing) & ~ (?j [native]: of(j,alaska) & j = i).

    // The person who is 111 years old doesn't live in Plymouth
    ?k [native]: is_old(k,111) & ~ lives_in(k,plymouth).

    // The Oregon native is either Zachary or the person who lives in Tehama
    ?l [native]: (zachary = l | (?m [native]: lives_in(m,tehama) & m = l)) & of(l,oregon).

    // The person who lives in Shaver Lake is 1 year younger than Roxanne
    ?n [native] o [year] p [year]: lives_in(n,shaver_lake) & is_old(roxanne,o) & p = o-1 & is_old(n,p).

    // The centenarian who lives in Plymouth isn't a native of Alaska
    ?q [native]: lives_in(q,plymouth) & ~ (?r [native]: of(r,alaska) & r = q).

    // Of the person who lives in Tehama and Mattie, one is a native of Alaska and the other is from Kansas
    ?s [native]: lives_in(s,tehama) & ~ (s = mattie) & ((?t [native]: of(t,alaska) & t = s & from(mattie,kansas)) | (?u [native]: of(u,alaska) & u = mattie & from(s,kansas))).


    // Logigram bijection axioms:
    ! x [native]: ?=1 y [year]: is_old(x, y).
    ! x [year]: ?=1 y [native]: is_old(y, x).

    ! x [native]: ?=1 y [type1]: of(x, y).
    ! x [type1]: ?=1 y [native]: of(y, x).

    ! x [native]: ?=1 y [type2]: lives_in(x, y).
    ! x [type2]: ?=1 y [native]: lives_in(y, x).

    ! x [native]: ?=1 y [type1]: from(x, y).
    ! x [type1]: ?=1 y [native]: from(y, x).

    // Logigram synonym axioms:
    ! x [native] y [type1]: of(x, y) <=> from(x, y).

    // Logigram transitive relation axioms:

    // Logigram reflexive relation axioms:

    // Logigram symmetry breaking axioms:
}

procedure main() {
    stdoptions.nbmodels = 10;
    printmodels(modelexpand(T,S))
}

